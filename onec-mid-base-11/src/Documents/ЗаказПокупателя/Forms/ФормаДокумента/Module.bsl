
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	// Исходный код:
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	// {{Levshina: доработка расчета суммы с учетом скидки
	
	СогласованнаяСкидка = 1 - Объект.net_СогласованнаяСкидка/100;
	ТекущиеДанные.Сумма = СогласованнаяСкидка*(ТекущиеДанные.Цена * ТекущиеДанные.Количество);
	
	//}}
	
	РассчитатьСуммуДокумента();
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура net_СогласованнаяСкидкаПриИзменении(Элемент)
	// {{Levshina: доработка расчета суммы с учетом скидки
	 
	 ТекДанные = Элементы.Товары.ТекущиеДанные;
	 Если ТекДанные = Неопределено Тогда 
		 Возврат;
	 Иначе
		 ЗадатьВопрос();	
	 КонецЕсли; 
	 
	 //}}	

КонецПроцедуры

&НаКлиенте  
Асинх Процедура ЗадатьВопрос()
	
	// {{Levshina: доработка расчета суммы с учетом скидки
	
	Ответ = Ждать ВопросАсинх("Скидка была применена. Пересчитать сумму?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		РассчитатьСуммуСУчетомСкидки(); 
		РассчитатьСуммуДокумента();
	Иначе
		Возврат;
	КонецЕсли;
	
	//}}	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСУчетомСкидки()
	
	// {{Levshina: доработка расчета суммы с учетом скидки
	
	ТаблицаТовары = Объект.Товары;
	ТаблицаУслуги = Объект.Услуги;
	СогласованнаяСкидка = 1 - Объект.net_СогласованнаяСкидка/100;
	
	Для Каждого стрТабл из ТаблицаТовары Цикл 
		
		стрТабл.Сумма = СогласованнаяСкидка*(стрТабл.Цена * стрТабл.Количество);
		
	КонецЦикла;
	
	Для Каждого стрТабл из ТаблицаУслуги Цикл 
		
		стрТабл.Сумма = СогласованнаяСкидка*(стрТабл.Цена * стрТабл.Количество);
		
	КонецЦикла; 	
	
	//}}	
КонецПроцедуры



&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)
	// {{Levshina: доработка расчета суммы с учетом скидки 
	
	РассчитатьСуммуСУчетомСкидки(); 
	РассчитатьСуммуДокумента();

    //}}

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
